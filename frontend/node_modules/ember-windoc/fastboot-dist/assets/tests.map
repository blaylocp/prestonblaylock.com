{"version":3,"sources":["dummy/tests/acceptance/index-test.js","dummy/tests/acceptance/index-test.jscs-test.js","dummy/tests/acceptance/index-test.jshint.js","dummy/tests/app.jscs-test.js","dummy/tests/app.jshint.js","dummy/tests/components/x-position-example.jscs-test.js","dummy/tests/components/x-position-example.jshint.js","dummy/tests/components/x-props-example.jscs-test.js","dummy/tests/components/x-props-example.jshint.js","dummy/tests/components/x-resize-example.jscs-test.js","dummy/tests/components/x-resize-example.jshint.js","dummy/tests/components/x-scroll-example.jscs-test.js","dummy/tests/components/x-scroll-example.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jscs-test.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jscs-test.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/round-float.jscs-test.js","dummy/tests/helpers/round-float.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/resolver.jscs-test.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jscs-test.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jscs-test.js","dummy/tests/test-helper.jshint.js","dummy/tests/unit/services/windoc-test.js","dummy/tests/unit/services/windoc-test.jscs-test.js","dummy/tests/unit/services/windoc-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/acceptance/index-test', ['exports', 'qunit', 'dummy/tests/helpers/module-for-acceptance'], function (exports, _qunit, _dummyTestsHelpersModuleForAcceptance) {\n\n  (0, _dummyTestsHelpersModuleForAcceptance['default'])('Acceptance | index');\n\n  (0, _qunit.test)('visiting /index', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/');\n      assert.equal(this.$('.scroll-height').text(), '' + document.body.scrollHeight, 'Correct scrollHeight');\n      assert.equal(this.$('.scroll-width').text(), '' + document.body.scrollWidth, 'Correct scrollWidth');\n      var lastScrollB = document.body.scrollHeight - document.documentElement.clientHeight - document.documentElement.scrollTop;\n      assert.equal(this.$('.scroll-bottom').text(), '' + lastScrollB, 'Correct scrollBottom');\n      assert.equal(this.$('.scroll-right').text(), '' + (document.body.scrollWidth - document.documentElement.clientWidth - document.documentElement.scrollLeft), 'Correct scrollRight');\n      assert.equal(this.$('.scroll-top').text(), '' + document.body.scrollTop, 'Correct scrollTop');\n    });\n  });\n});","define('dummy/tests/acceptance/index-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - acceptance');\n  test('acceptance/index-test.js should pass jscs', function () {\n    ok(true, 'acceptance/index-test.js should pass jscs.');\n  });\n});","define('dummy/tests/acceptance/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/index-test.js should pass jshint.');\n  });\n});","define('dummy/tests/app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('app.js should pass jscs', function () {\n    ok(true, 'app.js should pass jscs.');\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/components/x-position-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/x-position-example.js should pass jscs', function () {\n    ok(true, 'components/x-position-example.js should pass jscs.');\n  });\n});","define('dummy/tests/components/x-position-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/x-position-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/x-position-example.js should pass jshint.');\n  });\n});","define('dummy/tests/components/x-props-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/x-props-example.js should pass jscs', function () {\n    ok(true, 'components/x-props-example.js should pass jscs.');\n  });\n});","define('dummy/tests/components/x-props-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/x-props-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/x-props-example.js should pass jshint.');\n  });\n});","define('dummy/tests/components/x-resize-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/x-resize-example.js should pass jscs', function () {\n    ok(true, 'components/x-resize-example.js should pass jscs.');\n  });\n});","define('dummy/tests/components/x-resize-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/x-resize-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/x-resize-example.js should pass jshint.');\n  });\n});","define('dummy/tests/components/x-scroll-example.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - components');\n  test('components/x-scroll-example.js should pass jscs', function () {\n    ok(true, 'components/x-scroll-example.js should pass jscs.');\n  });\n});","define('dummy/tests/components/x-scroll-example.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components/x-scroll-example.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/x-scroll-example.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/destroy-app.js should pass jscs', function () {\n    ok(true, 'helpers/destroy-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(options, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(options, arguments);\n        }\n\n        (0, _dummyTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/module-for-acceptance.js should pass jscs', function () {\n    ok(true, 'helpers/module-for-acceptance.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/resolver.js should pass jscs', function () {\n    ok(true, 'helpers/resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/round-float.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/round-float.js should pass jscs', function () {\n    ok(true, 'helpers/round-float.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/round-float.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/round-float.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/round-float.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - helpers');\n  test('helpers/start-app.js should pass jscs', function () {\n    ok(true, 'helpers/start-app.js should pass jscs.');\n  });\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('resolver.js should pass jscs', function () {\n    ok(true, 'resolver.js should pass jscs.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('router.js should pass jscs', function () {\n    ok(true, 'router.js should pass jscs.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - .');\n  test('test-helper.js should pass jscs', function () {\n    ok(true, 'test-helper.js should pass jscs.');\n  });\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('dummy/tests/unit/services/windoc-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:windoc', 'Unit | Service | windoc', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  (0, _emberQunit.test)('adds a single resize and a single scroll event listener', function (assert) {\n    var eventCounts = { total: 0 };\n    var canceledId = null;\n\n    var service = this.subject({\n      w: {\n        addEventListener: function addEventListener(evtType) {\n          eventCounts[evtType] = (eventCounts[evtType] || 0) + 1;\n          eventCounts.total++;\n        },\n        setInterval: function setInterval() {\n          return 123;\n        },\n        clearInterval: function clearInterval(x) {\n          canceledId = x;\n        }\n      }\n    });\n\n    assert.equal(eventCounts.resize, 1, 'One resize listener');\n    assert.equal(eventCounts.scroll, 1, 'One scroll listener');\n    assert.equal(eventCounts.total, 2, 'Three total listeners');\n    service._cancelRefreshPollLoop();\n    assert.equal(canceledId, 123, 'canceling poll task clears interval');\n  });\n\n  (0, _emberQunit.test)('retrieves basic properties from correct places', function (assert) {\n    var service = this.subject({\n      w: {\n        document: {\n          documentElement: {\n            clientHeight: 21,\n            clientWidth: 231,\n            scrollTop: 221,\n            scrollLeft: 121,\n            scrollHeight: 83,\n            scrollWidth: 14\n          }\n        },\n        addEventListener: function addEventListener() {},\n        setInterval: function setInterval() {},\n        clearInterval: function clearInterval() {}\n      }\n    });\n\n    assert.equal(service.get('clientHeight'), 21, 'clientHeight');\n    assert.equal(service.get('clientWidth'), 231, 'clientWidth');\n    assert.equal(service.get('scrollTop'), 221, 'scrollTop');\n    assert.equal(service.get('scrollLeft'), 121, 'scrollLeft');\n    assert.equal(service.get('scrollHeight'), 83, 'scrollHeight');\n    assert.equal(service.get('scrollWidth'), 14, 'scrollWidth');\n  });\n\n  (0, _emberQunit.test)('retrieves secondary properties from correct places', function (assert) {\n    var service = this.subject({\n      w: {\n        document: {\n          documentElement: {\n            clientHeight: 50,\n            clientWidth: 100,\n            scrollTop: 25,\n            scrollLeft: 40,\n            scrollHeight: 100,\n            scrollWidth: 200\n          }\n        },\n        addEventListener: function addEventListener() {},\n        setInterval: function setInterval() {},\n        clearInterval: function clearInterval() {}\n      }\n    });\n\n    assert.equal(service.get('scrollRight'), 60, 'scrollRight');\n    assert.equal(service.get('scrollBottom'), 25, 'scrollBottom');\n\n    assert.equal(service.get('scrollHRatio'), 0.4, 'scrollHRatio');\n    assert.equal(service.get('scrollVRatio'), 0.5, 'scrollVRatio');\n  });\n});","define('dummy/tests/unit/services/windoc-test.jscs-test', ['exports'], function (exports) {\n  'use strict';\n\n  module('JSCS - unit/services');\n  test('unit/services/windoc-test.js should pass jscs', function () {\n    ok(true, 'unit/services/windoc-test.js should pass jscs.');\n  });\n});","define('dummy/tests/unit/services/windoc-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/services/windoc-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/windoc-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}